#nop ----- MAP FUNCTIONS -----

#alias map_show {
    #split 0 1 0 -90;
    #map offset 1 91 -1 -1;
}

#alias map_hide {
    #split;
    #map offset;
}

#alias map_create {
    mapper_print_msg {creating new map: %1};
    #map create;
    #map goto 1;
    #map flag VTmap on;
    #map flag UnicodeGraphics on;
    #map flag direction on;
    map_hide;
    map_show;
    #map legend {unicode graphics} { { } {\u2198} {\u2197} {>} {\u2199} {\u2E0C\u2E0D} {\uFF0F} {>\u2E0D} {\u2196} {\uFF3C} {\u2E1D\u2E1C} {>\u2E1C} {<} {\u2E0C<} {\u2E1D<} {><} {-} {\u2191} {\u2193} {\u2502} {+} {\u2192} {\u2190} {\u2500} {[} {(} {]} {)} };
    #variable map_current %1;
    #map write maps/%1.map;
}

#alias map_edit {
    mapper_print_msg {setting map to edit-mode: $map_current};
    #showme edit-mode enabled for $map_current;
    #map sync maps/$map_current.map;
    #map flag static off;
}

#alias map_read {
    mapper_print_msg {setting map to read-only: $map_current};
    #showme read-only enabled for $map_current;
    #map flag static on;
}

#alias map_save {
    mapper_print_msg {saving map: $map_current};
    #showme saving $map_current;
    #map write maps/$map_current.map;
}

#alias map_open {
    #map read maps/%1.map; 
    #map goto 1; 
    #map flag static on;
    #variable map_current {%1};
    map_show;
}

#nop ----- MAP EXITS -----

#nop room_link e midgaard 109
#alias room_link {
    #var path {};
    #switch {"%1"} {
        #case "e" {#var path east};
        #case "w" {#var path west};
        #case "n" {#var path north};
        #case "s" {#var path south};
        #case "ne" {#var path northeast};
        #case "nw" {#var path northwest};
        #case "se" {#var path southeast};
        #case "sw" {#var path southwest};
        #case "u" {#var path up};
        #case "d" {#var path down};
        #default {#var path %1};
    };
    #map exit %1 command {room_link_action {$path} {%2} {%3}};
    #showme {};
    mapper_print_msg {added room link: $path %2 %3};
}

#alias room_link_action {
    #delay {0} {
        %1;
        room_link_map %2 %3
    };
}

#alias room_link_map {
    #map read maps/%1.map;
    #map goto %2;
    map_show;
    #variable map_current %1;
    mapper_print_msg {now entering $map_current};
}

#alias room_door {
    #if {"%1" == "e"} {
        #map exit e command {open east;east};
        mapper_print_msg {added door to east};
    };

    #elseif {"%1" == "w"} {
        #map exit w command {open west;west};
        mapper_print_msg {added door to west};
    };

    #elseif {"%1" == "n"} {
        #map exit n command {open north;north};
        mapper_print_msg {added door to north};
    };

    #elseif {"%1" == "s"} {
        #map exit s command {open south;south};
        mapper_print_msg {added door to south};
    };

    #elseif {"%1" == "nw"} {
        #map exit nw command {open northw;northw};
        mapper_print_msg {added door to north-west};
    };

    #elseif {"%1" == "se"} {
        #map exit se command {open southe;southe};
        mapper_print_msg {added door to south-east};
    };

    #elseif {"%1" == "u"} {
        #map exit u command {open up;up};
        mapper_print_msg {added door to up};
    };

    #elseif {"%1" == "d"} {
        #map exit d command {open down;down};
        mapper_print_msg {added door to down};
    };

    #else {
        mapper_print_msg {what?!}
    }
}

#alias room_lock {
    #if {"%1" == "e"} {
        #map exit e command {unl east;open east;east};
        mapper_print_msg {added locked-door to east};
    };

    #elseif {"%1" == "w"} {
        #map exit w command {unl west;open west;west};
        mapper_print_msg {added locked-door to west};
    };

    #elseif {"%1" == "n"} {
        #map exit n command {unl north;open north;north};
        mapper_print_msg {added locked-door to north};
    };

    #elseif {"%1" == "s"} {
        #map exit s command {unl south;open south;south};
        mapper_print_msg {added locked-door to south};
    };

    #elseif {"%1" == "u"} {
        #map exit u command {unl up;open up;up};
        mapper_print_msg {added locked-door to up};
    };

    #elseif {"%1" == "d"} {
        #map exit d command {unl down;open down;down};
        mapper_print_msg {added locked-door to down};
    };

    #else {
        mapper_print_msg {what?!}
    }
}

#nop ----- ROOM ATTRIBUTES -----

#alias room_exit {
    #map roomflag hide on
}

#alias room_shop {
    #map set roomsymbol #;
}

#alias room_inn {
    #map set roomsymbol &;
}

#alias room_master {
    #map set roomsymbol M;
}

#alias room_fountain {
    #map set roomsymbol %;
}

#alias room_bank {
    #map set roomsymbol $;
}

#alias room_recall {
    #map set roomsymbol *;
}

#alias room_donation {
    #map set roomsymbol D;
}

#alias room_aggro {
    #map set roomcolor <fca>
}

#alias room_water {
    #map set roomcolor <acf>
}

#alias room_fog {
    #if {"%1" == "s"} {
        #map dig s;
        #map mov s;
        #map roomflag fog;
        #map mov n;
        mapper_print_msg {added unmapped room to south};
    };
    #elseif {"%1" == "n"} {
        #map dig n;
        #map mov n;
        #map roomflag fog;
        #map mov s;
        mapper_print_msg {added unmapped room to north};
    };
    #elseif {"%1" == "w"} {
        #map dig w;
        #map mov w;
        #map roomflag fog;
        #map mov e;
        mapper_print_msg {added unmapped room to west};
    };
    #elseif {"%1" == "e"} {
        #map dig e;
        #map mov e;
        #map roomflag fog;
        #map mov w;
        mapper_print_msg {added unmapped room to east};
    };
    #elseif {"%1" == "se"} {
        #map dig se;
        #map mov se;
        #map roomflag fog;
        #map mov nw;
        mapper_print_msg {added unmapped room to south-east};
    };
    #elseif {"%1" == "nw"} {
        #map dig nw;
        #map mov nw;
        #map roomflag fog;
        #map mov se;
        mapper_print_msg {added unmapped room to north-west};
    };
    #elseif {"%1" == "ne"} {
        #map dig ne;
        #map mov ne;
        #map roomflag fog;
        #map mov sw;
        mapper_print_msg {added unmapped room to north-east};
    };
    #elseif {"%1" == "sw"} {
        #map dig sw;
        #map mov sw;
        #map roomflag fog;
        #map mov ne;
        mapper_print_msg {added unmapped room to south-west};
    };

    #else {
        mapper_print_msg {what?!}
    };

}

#alias room_loop {
    #if {"%1" == "s"} {
        #map dig s;
        #map mov s;
        #map roomflag hide;
        #map mov n;
        #map exit s command {#delay 0 {south;#map move n}};
        mapper_print_msg {added infinite loop to south};
    };
    #elseif {"%1" == "n"} {
        #map dig n;
        #map mov n;
        #map roomflag hide;
        #map mov s;
        #map exit n command {#delay 0 {north;#map move s}};
        mapper_print_msg {added infinite loop to north};
    };
    #elseif {"%1" == "w"} {
        #map dig w;
        #map mov w;
        #map roomflag hide;
        #map mov e;
        #map exit w command {#delay 0 {west;#map move e}};
        mapper_print_msg {added infinite loop to west};
    };
    #elseif {"%1" == "e"} {
        #map dig e;
        #map mov e;
        #map roomflag hide;
        #map mov w;
        #map exit e command {#delay 0 {east;#map move w}};
        mapper_print_msg {added infinite loop to east};
    };

    #else {
        mapper_print_msg {what?!}
    };

}

#nop ----- galaxy wagon -----

#action {^Inside the traveling wagon} {
    room_link_map galaxy 1;
}

#nop ----- utility -----

#alias mapper_print_msg {
    #showme <afc>[MAPPER] %1;
}

#alias opa {
    open east;
    open west;
    open north;
    open south;
    open up;
    open down;
    open northe;
    open northw;
    open southe;
    open southw;
    where;
    look;
}

#alias show_colors {
    #showme <aaa> aaa<baa> baa<caa> caa<daa> daa<eaa> eaa<faa> faa<ada> ada<bda> bda<cda> cda<dda> dda<eda> eda<fda> fda;
    #showme <aab> aab<bab> bab<cab> cab<dab> dab<eab> eab<fab> fab<adb> adb<bdb> bdb<cdb> cdb<ddb> ddb<edb> edb<fdb> fdb;
    #showme <aac> aac<bac> bac<cac> cac<dac> dac<eac> eac<fac> fac<adc> adc<bdc> bdc<cdc> cdc<ddc> ddc<edc> edc<fdc> fdc;
    #showme <aad> aad<bad> bad<cad> cad<dad> dad<ead> ead<fad> fad<add> add<bdd> bdd<cdd> cdd<ddd> ddd<edd> edd<fdd> fdd;
    #showme <aae> aae<bae> bae<cae> cae<dae> dae<eae> eae<fae> fae<ade> ade<bde> bde<cde> cde<dde> dde<ede> ede<fde> fde;
    #showme <aaf> aaf<baf> baf<caf> caf<daf> daf<eaf> eaf<faf> faf<adf> adf<bdf> bdf<cdf> cdf<ddf> ddf<edf> edf<fdf> fdf;
    #showme <aba> aba<bba> bba<cba> cba<dba> dba<eba> eba<fba> fba<aea> aea<bea> bea<cea> cea<dea> dea<eea> eea<fea> fea;
    #showme <abb> abb<bbb> bbb<cbb> cbb<dbb> dbb<ebb> ebb<fbb> fbb<aeb> aeb<beb> beb<ceb> ceb<deb> deb<eeb> eeb<feb> feb;
    #showme <abc> abc<bbc> bbc<cbc> cbc<dbc> dbc<ebc> ebc<fbc> fbc<aec> aec<bec> bec<cec> cec<dec> dec<eec> eec<fec> fec;
    #showme <abd> abd<bbd> bbd<cbd> cbd<dbd> dbd<ebd> ebd<fbd> fbd<aed> aed<bed> bed<ced> ced<ded> ded<eed> eed<fed> fed;
    #showme <abe> abe<bbe> bbe<cbe> cbe<dbe> dbe<ebe> ebe<fbe> fbe<aee> aee<bee> bee<cee> cee<dee> dee<eee> eee<fee> fee;
    #showme <abf> abf<bbf> bbf<cbf> cbf<dbf> dbf<ebf> ebf<fbf> fbf<aef> aef<bef> bef<cef> cef<def> def<eef> eef<fef> fef;
    #showme <aca> aca<bca> bca<cca> cca<dca> dca<eca> eca<fca> fca<afa> afa<bfa> bfa<cfa> cfa<dfa> dfa<efa> efa<ffa> ffa;
    #showme <acb> acb<bcb> bcb<ccb> ccb<dcb> dcb<ecb> ecb<fcb> fcb<afb> afb<bfb> bfb<cfb> cfb<dfb> dfb<efb> efb<ffb> ffb;
    #showme <acc> acc<bcc> bcc<ccc> ccc<dcc> dcc<ecc> ecc<fcc> fcc<afc> afc<bfc> bfc<cfc> cfc<dfc> dfc<efc> efc<ffc> ffc;
    #showme <acd> acd<bcd> bcd<ccd> ccd<dcd> dcd<ecd> ecd<fcd> fcd<afd> afd<bfd> bfd<cfd> cfd<dfd> dfd<efd> efd<ffd> ffd;
    #showme <ace> ace<bce> bce<cce> cce<dce> dce<ece> ece<fce> fce<afe> afe<bfe> bfe<cfe> cfe<dfe> dfe<efe> efe<ffe> ffe;
    #showme <acf> acf<bcf> bcf<ccf> ccf<dcf> dcf<ecf> ecf<fcf> fcf<aff> aff<bff> bff<cff> cff<dff> dff<eff> eff<fff> fff;
}

#nop ----- startup -----

mapper_print_msg loaded
