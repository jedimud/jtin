#variable map_current midgaard.map

#nop ----- MAP FUNCTIONS -----

#alias map_show {
    #split 0 1 0 -90;
    #map offset 1 91 -1 -1;
}

#alias map_hide {
    #split;
    #map offset;
}

#alias map_create {
    print_mapper_msg {creating new map: %1};
    #map create;
    #map goto 1;
    #map flag VTmap on;
    #map flag UnicodeGraphics on;
    #map flag direction on;
    map_hide;
    map_show;
    #map legend {unicode graphics} { { } {\u2198} {\u2197} {>} {\u2199} {\u2E0C\u2E0D} {\uFF0F} {>\u2E0D} {\u2196} {\uFF3C} {\u2E1D\u2E1C} {>\u2E1C} {<} {\u2E0C<} {\u2E1D<} {><} {-} {\u2191} {\u2193} {\u2502} {+} {\u2192} {\u2190} {\u2500} {[} {(} {]} {)} };
    #variable map_current %1.map;
    #map write maps/%1.map;
}

#alias map_edit {
    print_mapper_msg {setting map to edit-mode: $map_current};
    #showme edit-mode enabled for $map_current;
    #map sync maps/$map_current;
    #map flag static off;
}

#alias map_read {
    print_mapper_msg {setting map to read-only: $map_current};
    #showme read-only enabled for $map_current;
    #map flag static on;
}

#alias map_save {
    print_mapper_msg {saving map: $map_current};
    #showme saving $map_current;
    #map write maps/$map_current;
}

#alias map_open {
    #map read maps/%1.map; 
    #map goto 1; 
    #map flag static on;
    #variable map_current {%1.map};
    map_show;
}

#nop ----- MAP EXITS -----

#nop room_link e midgaard 109
#alias room_link {
    #var path {};
    #switch {"%1"} {
        #case "e" {#var path east};
        #case "w" {#var path west};
        #case "n" {#var path north};
        #case "s" {#var path south};
        #case "ne" {#var path northeast};
        #case "nw" {#var path northwest};
        #case "se" {#var path southeast};
        #case "sw" {#var path southwest};
        #case "u" {#var path up};
        #case "d" {#var path down};
        #default {#var path %1};
    };
    #map exit %1 command {room_link_action {$path} {%2} {%3}};
    #showme {};
    print_mapper_msg {added room link: $path %2 %3};
}

#alias room_link_action {
    #delay {0} {
        %1;
        #map read maps/%2.map;
        #map goto %3;
        map_show;
        #variable map_current %2.map;
        print_mapper_msg {now entering $map_current};
    };
}

#alias room_door {
    #if {"%1" == "e"} {
        #map exit e command {open east;east};
        print_mapper_msg {added door to east};
    };

    #elseif {"%1" == "w"} {
        #map exit w command {open west;west};
        print_mapper_msg {added door to west};
    };

    #elseif {"%1" == "n"} {
        #map exit n command {open north;north};
        print_mapper_msg {added door to north};
    };

    #elseif {"%1" == "s"} {
        #map exit s command {open south;south};
        print_mapper_msg {added door to south};
    };

    #else {
        print_mapper_msg {what?!}
    }
}

#alias room_lock {
    #if {"%1" == "e"} {
        #map exit e command {unl east;open east;east};
        print_mapper_msg {added locked-door to east};
    };

    #elseif {"%1" == "w"} {
        #map exit w command {unl west;open west;west};
        print_mapper_msg {added locked-oor to west};
    };

    #elseif {"%1" == "n"} {
        #map exit n command {unl north;open north;north};
        print_mapper_msg {added locked-door to north};
    };

    #elseif {"%1" == "s"} {
        #map exit s command {unl south;open south;south};
        print_mapper_msg {added locked-door to south};
    };

    #else {
        print_mapper_msg {what?!}
    }
}

#nop ----- ROOM ATTRIBUTES -----

#alias room_exit {
    #map roomflag hide on
}

#alias room_shop {
    #map set roomsymbol #;
}

#alias room_inn {
    #map set roomsymbol &;
}

#alias room_master {
    #map set roomsymbol M;
}

#alias room_fountain {
    #map set roomsymbol %;
}

#alias room_bank {
    #map set roomsymbol $;
}

#alias room_recall {
    #map set roomsymbol *;
}

#alias room_donation {
    #map set roomsymbol D;
}

#alias room_aggro {
    #map roomflag avoid on;
}

#nop ----- utility -----

#alias print_mapper_msg {
    #showme <afc>[MAPPER] %1;
    #showme { };
}