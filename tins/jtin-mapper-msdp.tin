#nop ----- msdp mapping -----

#EVENT {IAC SB MSDP ROOM} {
    #variable {MSDP_ROOM} {%1};
    #replace {MSDP_ROOM[AREA]} {'} {};
    #if {"$jt_m_current" == ""} {
        #var jt_m_current {$MSDP_ROOM[AREA]};
        map open {$MSDP_ROOM[AREA]} {$MSDP_ROOM[VNUM]};
        jt_m_report_map_stats {$MSDP_ROOM[AREA]};
    };
    #elseif {&{jt_m_area_map[$jt_m_current]}} {
        #nop ignoring room linked to current zone
    };
    #elseif {"$jt_m_current" != "$MSDP_ROOM[AREA]"} {
        #map get worldflags jt_m_flags;
        #if {"$jt_m_flags" == "8206" || "$jt_m_flags" == "262"} { 
            map save;
        };
        #var jt_m_current {$MSDP_ROOM[AREA]};
        map open {$MSDP_ROOM[AREA]} {$MSDP_ROOM[VNUM]};
    };
    
    #map get worldflags jt_m_flags;
    #if {"$jt_m_flags" == "8206" || "$jt_m_flags" == "262"} { 
        #showme $MSDP_ROOM;
        #map goto {$MSDP_ROOM[VNUM]} {dig};
        #map set roomarea $MSDP_ROOM[AREA];
        #map set roomname $MSDP_ROOM[NAME];
        #map set roomterrain $MSDP_ROOM[TERRAIN];
        #map set roomcolor <fff>;
    
        #foreach {*MSDP_ROOM[EXITS][]} {EXIT}
        {
            #map get {roomexit} {EXIT_LIST};
            #if {&{EXIT_LIST[$EXIT]} == 0} {
                #map get {roomvnum} {EXIT_VNUM} {$MSDP_ROOM[EXITS][$EXIT]};
                #map dig {@parse_exit{$EXIT}} {$MSDP_ROOM[EXITS][$EXIT]};

                #nop add doors;
                #if {"$MSDP_ROOM[DOORS][$EXIT]" != ""} {
                    room door @parse_exit{$EXIT};
                };

                #nop set room undiscovered;
                #if {$EXIT_VNUM == 0} {
                    #map set {roomcolor} {<efa>} {$MSDP_ROOM[EXITS][$EXIT]};
                }
            }
        };
        #unvar EXIT;
        #unvar EXIT_LIST;
        #unvar EXIT_VNUM;
        #unvar jt_m_flags;

    };
    #else {
        #map goto {$MSDP_ROOM[VNUM]};
    }
}

#function parse_exit {
    #switch {"%1"} {
        #case {"east"} {#return e};
        #case {"west"} {#return w};
        #case {"south"} {#return s};
        #case {"north"} {#return n};
        #case {"northeast"} {#return ne};
        #case {"northwest"} {#return nw};
        #case {"southeast"} {#return se};
        #case {"southwest"} {#return sw};
        #case {"up"} {#return u};
        #case {"down"} {#return d};
    }
}

#function parse_opposite {
    #switch {"%1"} {
        #case {"east"} {#return w};
        #case {"west"} {#return e};
        #case {"south"} {#return n};
        #case {"north"} {#return s};
        #case {"northeast"} {#return sw};
        #case {"northwest"} {#return se};
        #case {"southeast"} {#return nw};
        #case {"southwest"} {#return ne};
        #case {"up"} {#return d};
        #case {"down"} {#return u};
    }
}

#variable result {$TELNET[IAC]$TELNET[SB]$TELNET[MSDP]$MSDP[VAR]REPORT};
#variable result {$result$MSDP[VAL]ROOM};
#send {$result$TELNET[IAC]$TELNET[SE]\};